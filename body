#!/usr/bin/env bash
#
# body: apply expression to all but the first line.
# Use multiple times in case the header spans more than one line.
#
# Example usage:
# $ seq 10 | header -a 'values' | body sort -nr
# $ seq 10 | header -a 'multi\nline\nheader' | body body body sort -nr
# $ printf "first_name\njim\nbob\nmary\n" | body ruby -nle 'puts $_.capitalize'
#
# From: https://unix.stackexchange.com/a/11859
#
# See also: header (https://github.com/jeroenjanssens/dsutils)
IFS= read -r header
printf '%s\n' "$header"
"$@"#!/usr/bin/env bash
#
# body: apply expression to all but the first line.
# Use multiple times in case the header spans more than one line.
#
# Example usage:
# $ seq 10 | header -a 'values' | body sort -nr
# $ seq 10 | header -a 'multi\nline\nheader' | body body body sort -nr
# $ printf "first_name\njim\nbob\nmary\n" | body ruby -nle 'puts $_.capitalize'
#
# From: https://unix.stackexchange.com/a/11859
#
# See also: header (https://github.com/jeroenjanssens/dsutils)

# Read the first line (header)
if ! IFS= read -r header; then
    echo "Error: Input is empty or invalid." >&2
    exit 1
fi

# Print the header
printf '%s\n' "$header"

# Execute the provided command on the remaining lines
if [[ $# -eq 0 ]]; then
    echo "Error: No command provided to process the body." >&2
    exit 1
fi

"$@" || {
    echo "Error: Command failed." >&2
    exit 1
}